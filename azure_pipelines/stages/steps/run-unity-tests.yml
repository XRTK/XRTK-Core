steps:
  - powershell: |
      Write-Host "Starting ${{ parameters.target }} Unit Tests..."
      $logPath = $(LogDirectory)\${{ parameters.target }}-tests.log
      $process = Start-Process -FilePath "$(EditorPath)" -ArgumentList "-batchmode -projectPath `"$(System.DefaultWorkingDirectory)\$(project.name)`" -buildTarget ${{ parameters.target }} -logfile `"$logPath`" -editorTestsResultFile `"$(LogDirectory)\${{ parameters.target }}-tests.xml`" -runEditorTests" -PassThru

      while ( -not (Test-Path $logPath -Type Leaf) ) {
          Start-Sleep -Milliseconds 100
      }

      $ljob = Start-Job -ScriptBlock { param($log) Get-Content "$log" -Wait } -ArgumentList $(LogDirectory)\$logPath

      while ( -not $process.HasExited )
      {
        Receive-Job $ljob
      }

      Receive-Job $ljob
      Stop-Job $ljob
      Remove-Job $ljob

      exit $process.ExitCode
    failOnStderr: true
    displayName: 'Run ${{ parameters.target }} Unit Tests'

  - task: PublishTestResults@2
    displayName: 'Publish ${{ parameters.target }} Test Results'
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: '*test?.xml'
      searchFolder: '$(LogDirectory)'
      mergeTestResults: true
      failTaskOnFailedTests: true
    condition: always()
